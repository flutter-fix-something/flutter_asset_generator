name: Add binaries to release
run-name: Add binaries to release ${{ github.event.release.tag_name }}

on:
  release:
    types:
     - created

# Add binaries to release

env:
  DART: bin/resource_generator.dart
  EXE: bin/resource_generator.exe

jobs:
  add-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dart-lang/setup-dart@v1
        with:
          channel: stable
      - run: dart pub get
      - run: dart analyze
      - run: dart compile exe ${{ env.DART }}}
      - run: chmod +x ${{ env.EXE }}
      - run: |
          export target=fgen_${{ github.event.release.tag_name }}_linux_amd64
          mv ${{ env.EXE}} $target
          gh release upload ${{ github.event.release.tag_name }} $target
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  add-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dart-lang/setup-dart@v1
        with:
          channel: stable
      - run: dart pub get
      - run: dart analyze
      - run: dart compile exe ${{ env.DART }}
      - run: |
          export target=fgen_${{ github.event.release.tag_name }}_macos_amd64
          mv ${{ env.EXE}} $target
          gh release upload ${{ github.event.release.tag_name }} $target
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  add-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dart-lang/setup-dart@v1
        with:
          channel: stable
      - run: dart pub get
      - run: dart analyze
      - run: dart compile exe ${{ env.DART }}
      - run: |
          export target=fgen_${{ github.event.release.tag_name }}_windows_amd64.exe
          mv ${{ env.EXE}} $target
          gh release upload ${{ github.event.release.tag_name }} $target
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}